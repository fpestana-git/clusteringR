library(egg)
library(R.matlab)
library(UpSetR)
library(ggVennDiagram)
library(DropSeq.util)
library(networkD3)
library(cowplot)
library(clustree)
library(rliger)
library(clusteringR)
library(visualisR)
# Load all necessary functions
# for (nm in list.files("../../../Universal_scripts/", pattern = "*.R$")) {
#        source(file.path("../../../Universal_scripts/", nm))
#   print(nm)
#     }
knitr::opts_chunk$set(echo = TRUE)
'%!in%' <- function(x,y)!('%in%'(x,y))
Sys.getenv("R_LIBS_USER")
library(data.table)
library(dplyr)
library(tidyr)
library(tfruns)
library(corrplot)
library(Seurat)
library(ggplot2)
library(egg)
library(R.matlab)
library(UpSetR)
library(ggVennDiagram)
library(DropSeq.util)
library(networkD3)
library(cowplot)
library(clustree)
library(rliger)
# # Load all necessary functions
# for (nm in list.files("../../../Universal_scripts/", pattern = "*.R$")) {
#        source(file.path("../../../Universal_scripts/", nm))
#   print(nm)
#     }
knitr::opts_chunk$set(echo = TRUE)
'%!in%' <- function(x,y)!('%in%'(x,y))
# Define results folder
resultsDirectory <- "Results"
rm(nm)
# Update documentation
devtools::document(pkg = "../Packages/visualisR/")
# Install package
devtools::install_github("fpestana-git/visualisR", force = T)
library(clusteringR)
library(visualisR)
library(data.table)
library(dplyr)
library(tidyr)
library(tfruns)
library(corrplot)
library(Seurat)
library(ggplot2)
library(egg)
library(R.matlab)
library(UpSetR)
library(ggVennDiagram)
library(DropSeq.util)
library(networkD3)
library(cowplot)
library(clustree)
library(rliger)
library(clusteringR)
library(visualisR)
# Load all necessary functions
# for (nm in list.files("../../../Universal_scripts/", pattern = "*.R$")) {
#        source(file.path("../../../Universal_scripts/", nm))
#   print(nm)
#     }
knitr::opts_chunk$set(echo = TRUE)
'%!in%' <- function(x,y)!('%in%'(x,y))
getAnywhere(drawDimPlot)
getAnywhere(Seurat)
visualisR::drawDimPlot()
library(visualisR)
visualisR::drawDimPlot()
visualisR:::drawDimPlot()
visualisR::drawDimPlot(dataset = spClustering_SCT_CTX1,datasetName = "spatialBatch1")
visualisR:::drawDimPlot(dataset = spClustering_SCT_CTX1,datasetName = "spatialBatch1")
visualisR:drawDimPlot(dataset = spClustering_SCT_CTX1,datasetName = "spatialBatch1")
visualisR::drawDimPlot(dataset = spClustering_SCT_CTX1,datasetName = "spatialBatch1")
visualisR::drawDimPlot(seuratObject = spClustering_SCT_CTX1,datasetName = "spatialBatch1")
search()
load_all()
install.packages("pkgload")
library(pkgload)
load_all()
load_all()
check
check()
testthat::test_that(print("test"))
library(data.table)
library(dplyr)
library(tidyr)
library(tfruns)
library(corrplot)
library(Seurat)
library(ggplot2)
library(egg)
library(R.matlab)
library(UpSetR)
library(ggVennDiagram)
library(DropSeq.util)
library(networkD3)
library(cowplot)
library(clustree)
library(rliger)
# # Load all necessary functions
# for (nm in list.files("../../../Universal_scripts/", pattern = "*.R$")) {
#        source(file.path("../../../Universal_scripts/", nm))
#   print(nm)
#     }
knitr::opts_chunk$set(echo = TRUE)
'%!in%' <- function(x,y)!('%in%'(x,y))
# Define results folder
resultsDirectory <- "Results"
rm(nm)
# Update documentation
devtools::document(pkg = "../Packages/visualisR/")
# Install package
devtools::install_github("fpestana-git/visualisR", force = T)
library(data.table)
library(dplyr)
library(tidyr)
library(tfruns)
library(corrplot)
library(Seurat)
library(ggplot2)
library(egg)
library(R.matlab)
library(UpSetR)
library(ggVennDiagram)
library(DropSeq.util)
library(networkD3)
library(cowplot)
library(clustree)
library(rliger)
library(clusteringR)
library(visualisR)
# Load all necessary functions
# for (nm in list.files("../../../Universal_scripts/", pattern = "*.R$")) {
#        source(file.path("../../../Universal_scripts/", nm))
#   print(nm)
#     }
knitr::opts_chunk$set(echo = TRUE)
'%!in%' <- function(x,y)!('%in%'(x,y))
# Define list of variable genes
variableGenes <- c("Aldh1l1","Aqp4","Fam107a","Gfap","Id3","Chrdl1","Slc1a3","Unc13c","Ogt","Rorb","Rspo1","Cux2","Frzb","Lamp5","Lpl","Npy1r","Obscn","Slc17a7","Snap25","Foxp2","Gria2","Syt6","Bcl11b","Etv1","Reln","Lhx6","Sst","Gad2","Pvalb","Cx3cr1","Aif1","Slc26a4","Ctgf","Nxph4","Vip","Prox1","Ascl1","Gabrg1","Mag","Plp1")
#analyseFromSaved <- "true"
library(data.table)
library(dplyr)
library(tidyr)
library(tfruns)
library(corrplot)
library(Seurat)
library(ggplot2)
library(egg)
library(R.matlab)
library(UpSetR)
library(ggVennDiagram)
library(DropSeq.util)
library(networkD3)
library(cowplot)
library(clustree)
library(rliger)
# # Load all necessary functions
# for (nm in list.files("../../../Universal_scripts/", pattern = "*.R$")) {
#        source(file.path("../../../Universal_scripts/", nm))
#   print(nm)
#     }
knitr::opts_chunk$set(echo = TRUE)
'%!in%' <- function(x,y)!('%in%'(x,y))
# Define results folder
resultsDirectory <- "Results"
rm(nm)
# Update documentation
devtools::document(pkg = "../Packages/visualisR/")
# Update documentation
devtools::document(pkg = "../Packages/clusteringR/")
# Install package
devtools::install_github("fpestana-git/clusteringR",force = T)
# Install package
devtools::install_github("fpestana-git/visualisR", force = T)
library(data.table)
library(dplyr)
library(tidyr)
library(tfruns)
library(corrplot)
library(Seurat)
library(ggplot2)
library(egg)
library(R.matlab)
library(UpSetR)
library(ggVennDiagram)
library(DropSeq.util)
library(networkD3)
library(cowplot)
library(clustree)
library(rliger)
library(clusteringR)
library(visualisR)
# Load all necessary functions
# for (nm in list.files("../../../Universal_scripts/", pattern = "*.R$")) {
#        source(file.path("../../../Universal_scripts/", nm))
#   print(nm)
#     }
knitr::opts_chunk$set(echo = TRUE)
'%!in%' <- function(x,y)!('%in%'(x,y))
# Define list of variable genes
variableGenes <- c("Aldh1l1","Aqp4","Fam107a","Gfap","Id3","Chrdl1","Slc1a3","Unc13c","Ogt","Rorb","Rspo1","Cux2","Frzb","Lamp5","Lpl","Npy1r","Obscn","Slc17a7","Snap25","Foxp2","Gria2","Syt6","Bcl11b","Etv1","Reln","Lhx6","Sst","Gad2","Pvalb","Cx3cr1","Aif1","Slc26a4","Ctgf","Nxph4","Vip","Prox1","Ascl1","Gabrg1","Mag","Plp1")
#analyseFromSaved <- "true"
# Load specific datasets
spDataset_CTX1 <- readRDS(file = "../Results/02_GenerateCountTable/20220412_123132_dataset_Batch1_CTX.rds")
spDataset_CTX2 <- readRDS(file = "../Results/02_GenerateCountTable/20220412_123132_dataset_Batch2_CTX.rds")
spMetadata_CTX1 <- readRDS(file = "../Results/02_GenerateCountTable/20220412_123131_metadata_Batch1_CTX.rds")
spMetadata_CTX2 <- readRDS(file = "../Results/02_GenerateCountTable/20220412_122800_metadata_Batch2.rds")
# Cluster batch 1 first
spClustering_SCT_CTX1 <- clusteringSCT(datasetObject = spDataset_CTX1,
metadataObject = spMetadata_CTX1,
selectFeatures = T,
selectedFeatureNames = variableGenes)
# Cluster batch 2 second
spClustering_SCT_CTX2 <- clusteringSCT(datasetObject = spDataset_CTX2,
metadataObject = spMetadata_CTX2,
selectFeatures = T,
selectedFeatureNames = variableGenes)
drawDimPlot(dataset = spClustering_SCT_CTX1,datasetName = "spatialBatch1")
drawDimPlot(seuratObject  = spClustering_SCT_CTX1,datasetName = "spatialBatch1")
drawDotPlot(dataset  = spClustering_SCT_CTX1,plotName = "spatialBatch1")
drawDotPlot(dataset  = spClustering_SCT_CTX1,plotName = "spatialBatch1",genesInterest = variableGenes)
drawDotPlot(dataset  = spClustering_SCT_CTX1,plotName = "spatialBatch1",genesInterest = glialGenes)
# List main glial genes
# List main glial genes
# List main glial genes
glialGenes <- c("Plp1","Slc1a3","Aqp4","Gabrg1","Aldh1l1","Cx3cr1")
drawDotPlot(dataset  = spClustering_SCT_CTX1,plotName = "spatialBatch1",genesInterest = glialGenes)
drawDotPlot(dataset  = spClustering_SCT_CTX1,plotName = "spatialBatch1",genesInterest = glialGenes, widthValue = 20)
drawDotPlot(dataset  = spClustering_SCT_CTX1,plotName = "spatialBatch1",genesInterest = glialGenes, widthValue = 16)
drawDotPlot(dataset  = spClustering_SCT_CTX1,plotName = "spatialBatch1",genesInterest = glialGenes, widthValue = 16, heightValue = 8)
# List main glial genes
glialGenes <- c("Plp1","Slc1a3","Aqp4","Gabrg1","Aldh1l1","Cx3cr1")
drawDimPlot(seuratObject  = spClustering_SCT_CTX1,datasetName = "spatialBatch1")
drawDotPlot(dataset  = spClustering_SCT_CTX1,plotName = "spatialBatch1",genesInterest = glialGenes, widthValue = 16, heightValue = 8)
drawDimPlot(seuratObject  = spClustering_SCT_CTX2,datasetName = "spatialBatch2")
drawDotPlot(dataset  = spClustering_SCT_CTX2,plotName = "spatialBatch2",genesInterest = glialGenes, widthValue = 16, heightValue = 8)
# Extract metadata to include seurat clusters
spMetadata_CTX1_neuronal <- spClustering_SCT_CTX1@meta.data %>% na.omit()
spMetadata_CTX2_neuronal <- spClustering_SCT_CTX2@meta.data %>% na.omit()
# Only include neuronal data in metadata
spMetadata_CTX1_neuronal <- spMetadata_CTX1_neuronal[spMetadata_CTX1_neuronal$seurat_clusters %!in% c(1,4,9,10,15),]
spMetadata_CTX2_neuronal <- spMetadata_CTX2_neuronal[spMetadata_CTX2_neuronal$seurat_clusters %!in% c(2,5,8,9,11,14),]
# Only keep neurons in the datasets
spDataset_CTX1_neuronal  <- spDataset_CTX1[,rownames(spMetadata_CTX1_neuronal)]
spDataset_CTX2_neuronal  <- spDataset_CTX2[,rownames(spMetadata_CTX2_neuronal)]
library(data.table)
library(dplyr)
library(tidyr)
library(tfruns)
library(corrplot)
library(Seurat)
library(ggplot2)
library(egg)
library(R.matlab)
library(UpSetR)
library(ggVennDiagram)
library(DropSeq.util)
library(networkD3)
library(cowplot)
library(clustree)
library(rliger)
library(clusteringR)
library(visualisR)
knitr::opts_chunk$set(echo = TRUE)
'%!in%' <- function(x,y)!('%in%'(x,y))
cor <- fread("../Segmentation/Cor.RData"  )
cor <- load("../Segmentation/Cor.RData"  )
cor
cor <- load(file = "../Segmentation/Cor.RData"  )
load(file = "../Segmentation/Cor.RData"  )
library(viridis)
View(cor)
cor@meta.data[["RegionNames"]]
region_numbers = c(6:10)
hippo = subset(cor, idents =regionnames[region_numbers])
hippo = subset(cor, idents =RegionNumbers[region_numbers])
hippo = subset(cor, idents =RegionNames[region_numbers])
cor@meta.data[["RegionNames"]]
cor@meta.data[["RegionAnnotation"]]
cor@meta.data[["RegionNumbers"]][1]
cor@meta.data[["RegionNumbers"]][1:10]
cor@meta.data[["RegionNumbers"]] %in% region_numbers
hippo = subset(cor, idents = RegionNames[3])
hippo = subset(cor, idents = RegionNumbers[3])
WhichCells(object = cor, idents = RegionNames[region_numbers])
Idents(object = cor) <- cor@meta.data$RegionNumbers
WhichCells(object = cor, idents = region_numbers)
cor_subsetted <- WhichCells(object = cor, idents = region_numbers)
avgexp = AverageExpression(hippo, return.seurat = TRUE, group.by =  'RegionAnnotation')
selectedCells <- subset(cor,cells = selectedCells)
selectedCells <- WhichCells(object = cor, idents = region_numbers)
selectedCells <- subset(cor,cells = selectedCells)
avgexp = AverageExpression(selectedCells, return.seurat = TRUE, group.by =  'RegionAnnotation')
avgexp@meta.data$region = rownames(avgexp@meta.data)
avgexp@meta.data$region = factor(avgexp@meta.data$region, levels = rownames(avgexp@meta.data))
DoHeatmap(avgexp, features = markers$Gene[1:20], group.by = 'region', draw.lines = FALSE, group.colors = as.character(colourNumbers[region_numbers])) + theme(axis.text.y  = element_text(size=16, face = 4, family = "Times New Roman")) +  scale_fill_viridis()
View(avgexp)
selectedCells <- WhichCells(object = cor, idents = region_numbers) %>% subset(cor,cells = selectedCells)
markers <- fread("AllTop20.csv")
View(markers)
DoHeatmap(avgexp, features = markers$Gene[1:19], group.by = 'region', draw.lines = FALSE, group.colors = as.character(colourNumbers[region_numbers])) + theme(axis.text.y  = element_text(size=16, face = 4, family = "Times New Roman")) +  scale_fill_viridis()
View(selectedCells)
# Define which regions to plot
metadata <- cor@meta.data
View(metadata)
metadata <- duplicated(metadata$RegionNumbers)
# Define which regions to plot
metadata <- cor@meta.data
metadata_d <- duplicated(metadata$RegionNumbers)
metadata_d <- metadata[duplicated(metadata$RegionNumbers),]
View(metadata_d)
metadata_d <- metadata[!duplicated(metadata$RegionNumbers),]
View(metadata_d)
unique(metadata_d$ColorCode)
# Define which regions to plot
metadata <- cor@meta.data
metadata <- metadata[!duplicated(metadata$RegionNumbers),]
View(metadata_d)
metadata <- metadata[order(metadata$RegionNumbers),]
View(metadata)
metadata$RegionNumbers <- as.numeric(metadata$RegionNumbers)
metadata <- metadata[order(metadata$RegionNumbers),]
View(metadata)
# Define which regions to plot
region_numbers = c(6:10)
colourValues <- metadata$ColorCode[6:10]
DoHeatmap(avgexp, features = markers$Gene[1:19], group.by = 'region', draw.lines = FALSE, group.colors = colourValues) + theme(axis.text.y  = element_text(size=16, face = 4, family = "Times New Roman")) +  scale_fill_viridis()
View(markers)
markers_s <- markers[markers$Region == "HPF"]
DoHeatmap(avgexp, features = markers_s$Gene[1:19], group.by = 'region', draw.lines = FALSE, group.colors = colourValues) + theme(axis.text.y  = element_text(size=16, face = 4, family = "Times New Roman")) +  scale_fill_viridis()
drawHeatmapPlot(seuratObject = avgexp,featureNames =  markers_s$Gene[1:19])
library(data.table)
library(dplyr)
library(tidyr)
library(tfruns)
library(corrplot)
library(Seurat)
library(ggplot2)
library(egg)
library(R.matlab)
library(UpSetR)
library(ggVennDiagram)
library(DropSeq.util)
library(networkD3)
library(cowplot)
library(clustree)
library(rliger)
# # Load all necessary functions
# for (nm in list.files("../../../Universal_scripts/", pattern = "*.R$")) {
#        source(file.path("../../../Universal_scripts/", nm))
#   print(nm)
#     }
knitr::opts_chunk$set(echo = TRUE)
'%!in%' <- function(x,y)!('%in%'(x,y))
# Define results folder
resultsDirectory <- "Results"
rm(nm)
# Update documentation
devtools::document(pkg = "../Packages/visualisR/")
# Install package
devtools::install_github("fpestana-git/visualisR", force = T)
library(visualisR)
drawHeatmapPlot(seuratObject = avgexp,featureNames =  markers_s$Gene[1:19],)
drawHeatmapPlot(seuratObject = avgexp,featureNames =  markers_s$Gene[1:19])
View(cor)
# Update documentation
devtools::document(pkg = "../Packages/visualisR/")
# Install package
devtools::install_github("fpestana-git/visualisR", force = T)
library(visualisR)
drawHeatmapPlot(seuratObject = avgexp,featureNames =  markers_s$Gene[1:19])
View(markers_s)
drawHeatmapPlot(seuratObject = avgexp,featureNames =  markers_s$Gene[1:19],plotName = "hippocampus_HC7_2")
library(pkgload)
load_all()
load_all(path = "../u0117021/LabFiles/_Drylab/Packages/")
load_all(path = "../u0117021/LabFiles/_Drylab/Packages/")
load_all(path = "../u0117021/LabFiles/_Drylab/Packages/visualisR/")
library(data.table)
library(dplyr)
library(tidyr)
library(tfruns)
library(corrplot)
library(Seurat)
library(ggplot2)
library(egg)
library(R.matlab)
library(UpSetR)
library(ggVennDiagram)
library(DropSeq.util)
library(networkD3)
library(cowplot)
library(clustree)
library(rliger)
library(clusteringR)
library(visualisR)
library(viridis)
library(pkgload)
knitr::opts_chunk$set(echo = TRUE)
'%!in%' <- function(x,y)!('%in%'(x,y))
load_all(path = "../u0117021/LabFiles/_Drylab/Packages/visualisR/")
load_all(path = "../u0117021/LabFiles/_Drylab/Packages/visualisR/")
drawHeatmapPlot(seuratObject = avgexp,featureNames =  markers_s$Gene[1:19],plotName = "hippocampus_HC7_2")
drawHeatmapPlot(seuratObject = avgexp,featureNames =  markers_s$Gene[1:19],plotName = "hippocampus_HC7_2")
load_all(path = "../u0117021/LabFiles/_Drylab/Packages/visualisR/")
drawHeatmapPlot(seuratObject = avgexp,featureNames =  markers_s$Gene[1:19],plotName = "hippocampus_HC7_2")
load_all(path = "../u0117021/LabFiles/_Drylab/Packages/visualisR/")
drawHeatmapPlot(seuratObject = avgexp,featureNames =  markers_s$Gene[1:19],plotName = "hippocampus_HC7_2")
load_all(path = "../u0117021/LabFiles/_Drylab/Packages/visualisR/")
drawHeatmapPlot(seuratObject = avgexp,featureNames =  markers_s$Gene[1:19],plotName = "hippocampus_HC7_2")
getwd()
drawHeatmapPlot(seuratObject = avgexp,featureNames =  markers_s$Gene[1:19],plotName = "hippocampus_HC7_2")
library(data.table)
library(dplyr)
library(tidyr)
library(tfruns)
library(corrplot)
library(Seurat)
library(ggplot2)
library(egg)
library(R.matlab)
library(UpSetR)
library(ggVennDiagram)
library(DropSeq.util)
library(networkD3)
library(cowplot)
library(clustree)
library(rliger)
# # Load all necessary functions
# for (nm in list.files("../../../Universal_scripts/", pattern = "*.R$")) {
#        source(file.path("../../../Universal_scripts/", nm))
#   print(nm)
#     }
knitr::opts_chunk$set(echo = TRUE)
'%!in%' <- function(x,y)!('%in%'(x,y))
# Define results folder
resultsDirectory <- "Results"
rm(nm)
# Install package
devtools::install_github("fpestana-git/visualisR", force = T)
library(data.table)
library(dplyr)
library(tidyr)
library(tfruns)
library(corrplot)
library(Seurat)
library(ggplot2)
library(egg)
library(R.matlab)
library(UpSetR)
library(ggVennDiagram)
library(DropSeq.util)
library(networkD3)
library(cowplot)
library(clustree)
library(rliger)
library(clusteringR)
library(visualisR)
library(viridis)
library(pkgload)
knitr::opts_chunk$set(echo = TRUE)
'%!in%' <- function(x,y)!('%in%'(x,y))
load(file = "../Segmentation/Cor.RData"  )
markers <- fread("AllTop20.csv")
# Extract metadata information
metadata <- cor@meta.data
metadata <- metadata[!duplicated(metadata$RegionNumbers),]
metadata$RegionNumbers <- as.numeric(metadata$RegionNumbers)
metadata <- metadata[order(metadata$RegionNumbers),]
# Define which regions and colours to plot
region_numbers = c(6:10)
colourValues <- metadata$ColorCode[6:10]
# Set active ident and extract cell names
Idents(object = cor) <- cor@meta.data$RegionNumbers
selectedCells <- WhichCells(object = cor, idents = region_numbers)
selectedCells <- subset(cor,cells = selectedCells)
# Extract average expression
avgexp = AverageExpression(selectedCells, return.seurat = TRUE, group.by =  'RegionAnnotation')
avgexp@meta.data$region = rownames(avgexp@meta.data)
avgexp@meta.data$region = factor(avgexp@meta.data$region, levels = rownames(avgexp@meta.data))
markers_s <- markers[markers$Region == "HPF"]
drawHeatmapPlot(seuratObject = avgexp,featureNames =  markers_s$Gene[1:19],plotName = "hippocampus_HC7_2")
drawDimPlot(seuratObject = cor,datasetName = "test")
load_all(path = "../u0117021/LabFiles/_Drylab/Packages/visualisR/")
drawHeatmapPlot(seuratObject = avgexp,featureNames =  markers_s$Gene[1:19],plotName = "hippocampus_HC7_2")
DoHeatmap(avgexp, features = markers_s$Gene[1:19], group.by = 'region', draw.lines = FALSE, group.colors = colourValues) + theme(axis.text.y  = element_text(size=16, face = 4, family = "Times New Roman")) +  scale_fill_viridis()
DoHeatmap(avgexp, features = markers_s$Gene[1:19], group.by = 'region', draw.lines = FALSE, group.colors = colourValues) + theme(axis.text.y  = element_text(size=16, face = 4, family = "Times New Roman")) +  scale_fill_viridis()
drawHeatmapPlot(seuratObject = avgexp,featureNames =  markers_s$Gene[1:19],plotName = "hippocampus_HC7_2")
usethis::use_vignette("introduction")
setwd("~/LabFiles/_Drylab/Packages/clusteringR")
usethis::use_vignette("introduction")
getwd()
usethis::use_vignette("clusteringR/introduction")
# Update documentation
devtools::document(pkg = "../Packages/visualisR/")
usethis::use_vignette("introduction")
check_is_package()
usethis::use_vignette("introduction")
